{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/tengu/dev/depudados/components/FunFacts.js\";\nimport React, { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport CountUp from \"react-countup\";\nimport VisibilitySensor from \"react-visibility-sensor\";\nconst FUNFACTS_DATA = [{\n  count: \"4789\",\n  title: \"Downloads\"\n}, {\n  count: \"6389\",\n  title: \"Likes\"\n}, {\n  count: \"900\",\n  title: \"5 Star Reating\"\n}, {\n  count: \"489\",\n  title: \"Awards\"\n}];\n\nconst FunFacts = () => {\n  const {\n    0: counter,\n    1: setCounter\n  } = useState({\n    startCounter: false\n  });\n\n  const onVisibilityChange = isVisible => {\n    if (isVisible) {\n      setCounter({\n        startCounter: true\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"border-top pt-120 pb-80\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: FUNFACTS_DATA.map((funfact, index) => /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"single-counter text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"counter\",\n              children: /*#__PURE__*/_jsxDEV(VisibilitySensor, {\n                onChange: onVisibilityChange,\n                offset: {\n                  top: 10\n                },\n                delayedCall: true,\n                children: /*#__PURE__*/_jsxDEV(CountUp, {\n                  end: counter.startCounter ? funfact.count : 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: funfact.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, `funfact-post-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\nexport default FunFacts;","map":{"version":3,"sources":["/home/tengu/dev/depudados/components/FunFacts.js"],"names":["React","useState","Container","Row","Col","CountUp","VisibilitySensor","FUNFACTS_DATA","count","title","FunFacts","counter","setCounter","startCounter","onVisibilityChange","isVisible","map","funfact","index","top"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,iBAApC;AAEA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADoB,EAKpB;AACED,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALoB,EASpB;AACED,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAToB,EAapB;AACED,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAboB,CAAtB;;AAmBA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC;AACrCY,IAAAA,YAAY,EAAE;AADuB,GAAD,CAAtC;;AAIA,QAAMC,kBAAkB,GAAIC,SAAD,IAAe;AACxC,QAAIA,SAAJ,EAAe;AACbH,MAAAA,UAAU,CAAC;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAD,CAAV;AACD;AACF,GAJD;;AAKA,sBACE;AAAS,IAAA,SAAS,EAAC,yBAAnB;AAAA,2BACE,QAAC,SAAD;AAAA,6BACE,QAAC,GAAD;AAAA,kBACGN,aAAa,CAACS,GAAd,CAAkB,CAACC,OAAD,EAAUC,KAAV,kBACjB,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,EAAE,EAAE,CAAhB;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,SAAhB;AAAA,qCACE,QAAC,gBAAD;AACE,gBAAA,QAAQ,EAAEJ,kBADZ;AAEE,gBAAA,MAAM,EAAE;AAAEK,kBAAAA,GAAG,EAAE;AAAP,iBAFV;AAGE,gBAAA,WAAW,MAHb;AAAA,uCAKE,QAAC,OAAD;AAAS,kBAAA,GAAG,EAAER,OAAO,CAACE,YAAR,GAAuBI,OAAO,CAACT,KAA/B,GAAuC;AAArD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAUE;AAAA,wBAAIS,OAAO,CAACR;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAyB,gBAAeS,KAAM,EAA9C;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAlCD;;AAoCA,eAAeR,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport CountUp from \"react-countup\";\r\nimport VisibilitySensor from \"react-visibility-sensor\";\r\n\r\nconst FUNFACTS_DATA = [\r\n  {\r\n    count: \"4789\",\r\n    title: \"Downloads\"\r\n  },\r\n  {\r\n    count: \"6389\",\r\n    title: \"Likes\"\r\n  },\r\n  {\r\n    count: \"900\",\r\n    title: \"5 Star Reating\"\r\n  },\r\n  {\r\n    count: \"489\",\r\n    title: \"Awards\"\r\n  }\r\n];\r\n\r\nconst FunFacts = () => {\r\n  const [counter, setCounter] = useState({\r\n    startCounter: false\r\n  });\r\n\r\n  const onVisibilityChange = (isVisible) => {\r\n    if (isVisible) {\r\n      setCounter({ startCounter: true });\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"border-top pt-120 pb-80\">\r\n      <Container>\r\n        <Row>\r\n          {FUNFACTS_DATA.map((funfact, index) => (\r\n            <Col md={3} sm={6} key={`funfact-post-${index}`}>\r\n              <div className=\"single-counter text-center\">\r\n                <span className=\"counter\">\r\n                  <VisibilitySensor\r\n                    onChange={onVisibilityChange}\r\n                    offset={{ top: 10 }}\r\n                    delayedCall\r\n                  >\r\n                    <CountUp end={counter.startCounter ? funfact.count : 0} />\r\n                  </VisibilitySensor>\r\n                </span>\r\n                <p>{funfact.title}</p>\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default FunFacts;\r\n"]},"metadata":{},"sourceType":"module"}