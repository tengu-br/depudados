{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tengu/dev/depudados/components/charts/PieChart.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport ReactECharts from 'echarts-for-react';\n\nvar PieChart = function PieChart(_ref) {\n  _s();\n\n  var name = _ref.name,\n      data = _ref.data,\n      textsize = _ref.textsize;\n  var chart = useRef(null);\n\n  function selectDefault() {\n    chart.current.getEchartsInstance().dispatchAction({\n      type: 'select',\n      seriesIndex: [0],\n      dataIndex: [0]\n    });\n  }\n\n  var option = {\n    tooltip: {\n      trigger: 'item',\n      formatter: function formatter(params) {\n        var colorSpan = function colorSpan(color) {\n          return '<span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background-color:' + color + '\"></span>';\n        };\n\n        var rez = '<p>' + params[0].axisValue + '</p>'; //console.log(params); //quite useful for debug\n\n        params.forEach(function (item) {\n          //console.log(item); //quite useful for debug\n          var xx = '<p>' + colorSpan(item.color) + ' ' + item.seriesName + ': ' + item.data + '%' + '</p>';\n          rez += xx;\n        });\n        return rez;\n      }\n    },\n    series: [{\n      type: 'pie',\n      radius: ['50%', '80%'],\n      avoidLabelOverlap: false,\n      selectedMode: 'single',\n      selectedOffset: 0,\n      cursor: 'default',\n      select: {\n        label: {\n          show: true\n        }\n      },\n      label: {\n        show: false,\n        position: 'center',\n        fontSize: textsize,\n        fontWeight: 'bold',\n        formatter: '{c}%'\n      },\n      emphasis: {\n        label: {\n          show: false\n        }\n      },\n      labelLine: {\n        show: false\n      },\n      data: data\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ReactECharts, {\n    option: option,\n    notMerge: true,\n    lazyUpdate: true,\n    ref: chart,\n    onEvents: {\n      click: selectDefault\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(PieChart, \"E9DVxUrMduiWe0dRI4GITQ6VxAo=\");\n\n_c = PieChart;\nexport default PieChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"sources":["/home/tengu/dev/depudados/components/charts/PieChart.js"],"names":["React","useEffect","useRef","ReactECharts","PieChart","name","data","textsize","chart","selectDefault","current","getEchartsInstance","dispatchAction","type","seriesIndex","dataIndex","option","tooltip","trigger","formatter","params","colorSpan","color","rez","axisValue","forEach","item","xx","seriesName","series","radius","avoidLabelOverlap","selectedMode","selectedOffset","cursor","select","label","show","position","fontSize","fontWeight","emphasis","labelLine","click"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA8B;AAAA;;AAAA,MAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAE7C,MAAMC,KAAK,GAAGN,MAAM,CAAC,IAAD,CAApB;;AAEA,WAASO,aAAT,GAAyB;AACvBD,IAAAA,KAAK,CAACE,OAAN,CAAcC,kBAAd,GAAmCC,cAAnC,CAAkD;AAChDC,MAAAA,IAAI,EAAE,QAD0C;AAEhDC,MAAAA,WAAW,EAAE,CAAC,CAAD,CAFmC;AAGhDC,MAAAA,SAAS,EAAE,CAAC,CAAD;AAHqC,KAAlD;AAKD;;AAED,MAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE,MADF;AAEPC,MAAAA,SAAS,EAAE,mBAAUC,MAAV,EAAkB;AAC3B,YAAIC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK;AAAA,iBAAI,iHAAiHA,KAAjH,GAAyH,WAA7H;AAAA,SAArB;;AACA,YAAIC,GAAG,GAAG,QAAQH,MAAM,CAAC,CAAD,CAAN,CAAUI,SAAlB,GAA8B,MAAxC,CAF2B,CAG3B;;AACAJ,QAAAA,MAAM,CAACK,OAAP,CAAe,UAAAC,IAAI,EAAI;AACrB;AACA,cAAIC,EAAE,GAAG,QAAQN,SAAS,CAACK,IAAI,CAACJ,KAAN,CAAjB,GAAgC,GAAhC,GAAsCI,IAAI,CAACE,UAA3C,GAAwD,IAAxD,GAA+DF,IAAI,CAACpB,IAApE,GAA2E,GAA3E,GAAiF,MAA1F;AACAiB,UAAAA,GAAG,IAAII,EAAP;AACD,SAJD;AAMA,eAAOJ,GAAP;AACD;AAbM,KADI;AAgBbM,IAAAA,MAAM,EAAE,CACN;AACEhB,MAAAA,IAAI,EAAE,KADR;AAEEiB,MAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,CAFV;AAGEC,MAAAA,iBAAiB,EAAE,KAHrB;AAIEC,MAAAA,YAAY,EAAE,QAJhB;AAKEC,MAAAA,cAAc,EAAE,CALlB;AAMEC,MAAAA,MAAM,EAAE,SANV;AAOEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE;AADD;AADD,OAPV;AAYED,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,KADD;AAELC,QAAAA,QAAQ,EAAE,QAFL;AAGLC,QAAAA,QAAQ,EAAEhC,QAHL;AAILiC,QAAAA,UAAU,EAAE,MAJP;AAKLrB,QAAAA,SAAS,EAAE;AALN,OAZT;AAmBEsB,MAAAA,QAAQ,EAAE;AACRL,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE;AADD;AADC,OAnBZ;AAwBEK,MAAAA,SAAS,EAAE;AACTL,QAAAA,IAAI,EAAE;AADG,OAxBb;AA2BE/B,MAAAA,IAAI,EAAEA;AA3BR,KADM;AAhBK,GAAf;AAiDA,sBACE,QAAC,YAAD;AACE,IAAA,MAAM,EAAEU,MADV;AAEE,IAAA,QAAQ,EAAE,IAFZ;AAGE,IAAA,UAAU,EAAE,IAHd;AAIE,IAAA,GAAG,EAAER,KAJP;AAKE,IAAA,QAAQ,EAAE;AACRmC,MAAAA,KAAK,EAAElC;AADC;AALZ;AAAA;AAAA;AAAA;AAAA,WADF;AAWD,CAxED;;GAAML,Q;;KAAAA,Q;AA0EN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport ReactECharts from 'echarts-for-react';\n\nconst PieChart = ({ name, data, textsize }) => {\n\n  const chart = useRef(null);\n\n  function selectDefault() {\n    chart.current.getEchartsInstance().dispatchAction({\n      type: 'select',\n      seriesIndex: [0],\n      dataIndex: [0]\n    });\n  }\n\n  const option = {\n    tooltip: {\n      trigger: 'item',\n      formatter: function (params) {\n        var colorSpan = color => '<span style=\"display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px;background-color:' + color + '\"></span>';\n        let rez = '<p>' + params[0].axisValue + '</p>';\n        //console.log(params); //quite useful for debug\n        params.forEach(item => {\n          //console.log(item); //quite useful for debug\n          var xx = '<p>' + colorSpan(item.color) + ' ' + item.seriesName + ': ' + item.data + '%' + '</p>'\n          rez += xx;\n        });\n\n        return rez;\n      }\n    },\n    series: [\n      {\n        type: 'pie',\n        radius: ['50%', '80%'],\n        avoidLabelOverlap: false,\n        selectedMode: 'single',\n        selectedOffset: 0,\n        cursor: 'default',\n        select: {\n          label: {\n            show: true,\n          }\n        },\n        label: {\n          show: false,\n          position: 'center',\n          fontSize: textsize,\n          fontWeight: 'bold',\n          formatter: '{c}%',\n        },\n        emphasis: {\n          label: {\n            show: false,\n          },\n        },\n        labelLine: {\n          show: false\n        },\n        data: data\n      }\n    ]\n  }\n\n  return (\n    <ReactECharts\n      option={option}\n      notMerge={true}\n      lazyUpdate={true}\n      ref={chart}\n      onEvents={{\n        click: selectDefault\n      }}\n    />\n  )\n}\n\nexport default PieChart"]},"metadata":{},"sourceType":"module"}