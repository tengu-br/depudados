{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/tengu/dev/depudados/components/charts/GeoPresenca.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport ReactECharts from 'echarts-for-react';\nimport { registerMap } from 'echarts';\nimport brasilJson from './GeoJSON/brasil.json';\n\nconst GeoPresenca = ({\n  name,\n  data,\n  textsize\n}) => {\n  var compiledData = [];\n\n  for (const uf in data) {\n    if (Object.hasOwnProperty.call(data, uf)) {\n      compiledData.push({\n        name: data[uf].nome,\n        value: Math.round(data[uf].somaPresenca / data[uf].qtdDeputados * 100 + Number.EPSILON)\n      });\n    }\n  }\n\n  console.log(compiledData);\n  const chart = useRef(null);\n  registerMap('BR', brasilJson, {\n    'Distrito Federal': {\n      left: -70,\n      top: -20,\n      width: 4\n    }\n  });\n  const option = {\n    tooltip: {\n      trigger: 'item',\n      showDelay: 0,\n      transitionDuration: 0.2,\n      formatter: function (params) {\n        var value = (params.value + '').split('.');\n        value = value[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,');\n        return params.seriesName + '<br/>' + params.name + ': ' + value + '%';\n      }\n    },\n    visualMap: {\n      left: 'right',\n      min: 92,\n      max: 100,\n      inRange: {\n        color: ['#F0D154', '#5357F0']\n      },\n      text: ['Alta', 'Baixa'],\n      calculable: true\n    },\n    toolbox: {\n      show: true,\n      orient: 'vertical',\n      left: 'left',\n      top: 'top',\n      feature: {\n        dataView: {\n          readOnly: true,\n          title: 'Lista de dados'\n        },\n        saveAsImage: {\n          title: 'Salvar como imagem'\n        }\n      }\n    },\n    series: [{\n      name: 'Presença',\n      selectedMode: false,\n      type: 'map',\n      roam: false,\n      map: 'BR',\n      emphasis: {\n        label: {\n          show: true\n        }\n      },\n      data: compiledData\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ReactECharts, {\n    option: option,\n    notMerge: true,\n    lazyUpdate: true,\n    ref: chart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\nexport default GeoPresenca;","map":{"version":3,"sources":["/home/tengu/dev/depudados/components/charts/GeoPresenca.js"],"names":["React","useEffect","useRef","ReactECharts","registerMap","brasilJson","GeoPresenca","name","data","textsize","compiledData","uf","Object","hasOwnProperty","call","push","nome","value","Math","round","somaPresenca","qtdDeputados","Number","EPSILON","console","log","chart","left","top","width","option","tooltip","trigger","showDelay","transitionDuration","formatter","params","split","replace","seriesName","visualMap","min","max","inRange","color","text","calculable","toolbox","show","orient","feature","dataView","readOnly","title","saveAsImage","series","selectedMode","type","roam","map","emphasis","label"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AACA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAD,KAA8B;AAEhD,MAAIC,YAAY,GAAG,EAAnB;;AAEA,OAAK,MAAMC,EAAX,IAAiBH,IAAjB,EAAuB;AACrB,QAAII,MAAM,CAACC,cAAP,CAAsBC,IAAtB,CAA2BN,IAA3B,EAAiCG,EAAjC,CAAJ,EAA0C;AACxCD,MAAAA,YAAY,CAACK,IAAb,CAAkB;AAAER,QAAAA,IAAI,EAAEC,IAAI,CAACG,EAAD,CAAJ,CAASK,IAAjB;AAAuBC,QAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWX,IAAI,CAACG,EAAD,CAAJ,CAASS,YAAT,GAAwBZ,IAAI,CAACG,EAAD,CAAJ,CAASU,YAAjC,GAAgD,GAAhD,GAAsDC,MAAM,CAACC,OAAxE;AAA9B,OAAlB;AACD;AACF;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYf,YAAZ;AAGA,QAAMgB,KAAK,GAAGxB,MAAM,CAAC,IAAD,CAApB;AAGAE,EAAAA,WAAW,CAAC,IAAD,EAAOC,UAAP,EAAmB;AAC5B,wBAAoB;AAClBsB,MAAAA,IAAI,EAAE,CAAC,EADW;AAElBC,MAAAA,GAAG,EAAE,CAAC,EAFY;AAGlBC,MAAAA,KAAK,EAAE;AAHW;AADQ,GAAnB,CAAX;AASA,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE,MADF;AAEPC,MAAAA,SAAS,EAAE,CAFJ;AAGPC,MAAAA,kBAAkB,EAAE,GAHb;AAIPC,MAAAA,SAAS,EAAE,UAAUC,MAAV,EAAkB;AAC3B,YAAInB,KAAK,GAAG,CAACmB,MAAM,CAACnB,KAAP,GAAe,EAAhB,EAAoBoB,KAApB,CAA0B,GAA1B,CAAZ;AACApB,QAAAA,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAL,CAASqB,OAAT,CAAiB,gCAAjB,EAAmD,KAAnD,CAAR;AACA,eAAOF,MAAM,CAACG,UAAP,GAAoB,OAApB,GAA8BH,MAAM,CAAC7B,IAArC,GAA4C,IAA5C,GAAmDU,KAAnD,GAA2D,GAAlE;AACD;AARM,KADI;AAWbuB,IAAAA,SAAS,EAAE;AACTb,MAAAA,IAAI,EAAE,OADG;AAETc,MAAAA,GAAG,EAAE,EAFI;AAGTC,MAAAA,GAAG,EAAE,GAHI;AAITC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,CAAC,SAAD,EAAW,SAAX;AADA,OAJA;AAOTC,MAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,OAAT,CAPG;AAQTC,MAAAA,UAAU,EAAE;AARH,KAXE;AAqBbC,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE,IADC;AAEPC,MAAAA,MAAM,EAAE,UAFD;AAGPtB,MAAAA,IAAI,EAAE,MAHC;AAIPC,MAAAA,GAAG,EAAE,KAJE;AAKPsB,MAAAA,OAAO,EAAE;AACPC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,KAAK,EAAE;AAAzB,SADH;AAEPC,QAAAA,WAAW,EAAE;AAAED,UAAAA,KAAK,EAAE;AAAT;AAFN;AALF,KArBI;AA+BbE,IAAAA,MAAM,EAAE,CACN;AACEhD,MAAAA,IAAI,EAAE,UADR;AAEEiD,MAAAA,YAAY,EAAE,KAFhB;AAGEC,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,IAAI,EAAE,KAJR;AAKEC,MAAAA,GAAG,EAAE,IALP;AAMEC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,KAAK,EAAE;AACLb,UAAAA,IAAI,EAAE;AADD;AADC,OANZ;AAWExC,MAAAA,IAAI,EAAEE;AAXR,KADM;AA/BK,GAAf;AAgDA,sBACE,QAAC,YAAD;AACE,IAAA,MAAM,EAAEoB,MADV;AAEE,IAAA,QAAQ,EAAE,IAFZ;AAGE,IAAA,UAAU,EAAE,IAHd;AAIE,IAAA,GAAG,EAAEJ;AAJP;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAhFD;;AAkFA,eAAepB,WAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport ReactECharts from 'echarts-for-react';\nimport { registerMap } from 'echarts'\nimport brasilJson from './GeoJSON/brasil.json'\nconst GeoPresenca = ({ name, data, textsize }) => {\n\n  var compiledData = []\n\n  for (const uf in data) {\n    if (Object.hasOwnProperty.call(data, uf)) {\n      compiledData.push({ name: data[uf].nome, value: Math.round(data[uf].somaPresenca / data[uf].qtdDeputados * 100 + Number.EPSILON) })\n    }\n  }\n  console.log(compiledData)\n\n\n  const chart = useRef(null);\n\n\n  registerMap('BR', brasilJson, {\n    'Distrito Federal': {\n      left: -70,\n      top: -20,\n      width: 4\n    },\n  });\n\n\n  const option = {\n    tooltip: {\n      trigger: 'item',\n      showDelay: 0,\n      transitionDuration: 0.2,\n      formatter: function (params) {\n        var value = (params.value + '').split('.');\n        value = value[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,');\n        return params.seriesName + '<br/>' + params.name + ': ' + value + '%';\n      }\n    },\n    visualMap: {\n      left: 'right',\n      min: 92,\n      max: 100,\n      inRange: {\n        color: ['#F0D154','#5357F0']\n      },\n      text: ['Alta', 'Baixa'],\n      calculable: true,\n    },\n    toolbox: {\n      show: true,\n      orient: 'vertical',\n      left: 'left',\n      top: 'top',\n      feature: {\n        dataView: { readOnly: true, title: 'Lista de dados' },\n        saveAsImage: { title: 'Salvar como imagem' }\n      }\n    },\n    series: [\n      {\n        name: 'Presença',\n        selectedMode: false,\n        type: 'map',\n        roam: false,\n        map: 'BR',\n        emphasis: {\n          label: {\n            show: true\n          }\n        },\n        data: compiledData\n      }\n    ]\n  }\n\n  return (\n    <ReactECharts\n      option={option}\n      notMerge={true}\n      lazyUpdate={true}\n      ref={chart}\n    />\n  )\n}\n\nexport default GeoPresenca\n\n"]},"metadata":{},"sourceType":"module"}