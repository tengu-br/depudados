{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tengu/dev/depudados/components/charts/GeoGastos.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport ReactECharts from 'echarts-for-react';\nimport { registerMap } from 'echarts';\nimport brasilJson from './GeoJSON/brasil.json';\n\nvar GeoPresenca = function GeoPresenca(_ref) {\n  _s();\n\n  var name = _ref.name,\n      data = _ref.data,\n      textsize = _ref.textsize;\n  var compiledData = [];\n\n  for (var uf in data) {\n    if (Object.hasOwnProperty.call(data, uf)) {\n      compiledData.push({\n        name: data[uf].nome,\n        value: data[uf].somaGastos / data[uf].qtdDeputados\n      });\n    }\n  }\n\n  var chart = useRef(null);\n  registerMap('BR', brasilJson, {\n    'Distrito Federal': {\n      left: -70,\n      top: -20,\n      width: 4\n    }\n  });\n  var option = {\n    tooltip: {\n      trigger: 'item',\n      showDelay: 0,\n      transitionDuration: 0.2,\n      formatter: function formatter(params) {\n        return params.seriesName + '<br/><b>' + params.name + '</b>: ' + params.value.toLocaleString(\"pt-BR\", {\n          minimumFractionDigits: 2,\n          style: 'currency',\n          currency: 'BRL'\n        });\n      }\n    },\n    visualMap: {\n      left: 'right',\n      min: 10000,\n      max: 50000,\n      inRange: {\n        color: ['#5357F0', '#9C9FFF', '#F0D154', '#b70303']\n      },\n      text: ['Alta', 'Baixa'],\n      calculable: true\n    },\n    toolbox: {\n      show: true,\n      orient: 'vertical',\n      left: 'left',\n      top: 'top',\n      feature: {\n        dataView: {\n          readOnly: true,\n          title: 'Lista de dados'\n        },\n        saveAsImage: {\n          title: 'Salvar como imagem'\n        }\n      }\n    },\n    series: [{\n      name: 'Média de Gastos',\n      selectedMode: false,\n      type: 'map',\n      roam: false,\n      map: 'BR',\n      emphasis: {\n        label: {\n          show: true\n        }\n      },\n      data: compiledData\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ReactECharts, {\n    option: option,\n    notMerge: true,\n    lazyUpdate: true,\n    ref: chart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(GeoPresenca, \"E9DVxUrMduiWe0dRI4GITQ6VxAo=\");\n\n_c = GeoPresenca;\nexport default GeoPresenca;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeoPresenca\");","map":{"version":3,"sources":["/home/tengu/dev/depudados/components/charts/GeoGastos.js"],"names":["React","useEffect","useRef","ReactECharts","registerMap","brasilJson","GeoPresenca","name","data","textsize","compiledData","uf","Object","hasOwnProperty","call","push","nome","value","somaGastos","qtdDeputados","chart","left","top","width","option","tooltip","trigger","showDelay","transitionDuration","formatter","params","seriesName","toLocaleString","minimumFractionDigits","style","currency","visualMap","min","max","inRange","color","text","calculable","toolbox","show","orient","feature","dataView","readOnly","title","saveAsImage","series","selectedMode","type","roam","map","emphasis","label"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport ReactECharts from 'echarts-for-react';\nimport { registerMap } from 'echarts'\nimport brasilJson from './GeoJSON/brasil.json'\nconst GeoPresenca = ({ name, data, textsize }) => {\n\n  var compiledData = []\n\n  for (const uf in data) {\n    if (Object.hasOwnProperty.call(data, uf)) {\n      compiledData.push({ name: data[uf].nome, value: data[uf].somaGastos / data[uf].qtdDeputados })\n    }\n  }\n\n  const chart = useRef(null);\n\n\n  registerMap('BR', brasilJson, {\n    'Distrito Federal': {\n      left: -70,\n      top: -20,\n      width: 4\n    },\n  });\n\n\n  const option = {\n    tooltip: {\n      trigger: 'item',\n      showDelay: 0,\n      transitionDuration: 0.2,\n      formatter: function (params) {\n        return params.seriesName + '<br/><b>' + params.name + '</b>: ' + params.value.toLocaleString(\"pt-BR\", { minimumFractionDigits: 2, style: 'currency', currency: 'BRL' });\n      }\n    },\n    visualMap: {\n      left: 'right',\n      min: 10000,\n      max: 50000,\n      inRange: {\n        color: ['#5357F0','#9C9FFF','#F0D154','#b70303']\n      },\n      text: ['Alta', 'Baixa'],\n      calculable: true,\n    },\n    toolbox: {\n      show: true,\n      orient: 'vertical',\n      left: 'left',\n      top: 'top',\n      feature: {\n        dataView: { readOnly: true, title: 'Lista de dados' },\n        saveAsImage: { title: 'Salvar como imagem' }\n      }\n    },\n    series: [\n      {\n        name: 'Média de Gastos',\n        selectedMode: false,\n        type: 'map',\n        roam: false,\n        map: 'BR',\n        emphasis: {\n          label: {\n            show: true\n          }\n        },\n        data: compiledData\n      }\n    ]\n  }\n\n  return (\n    <ReactECharts\n      option={option}\n      notMerge={true}\n      lazyUpdate={true}\n      ref={chart}\n    />\n  )\n}\n\nexport default GeoPresenca\n\n"]},"metadata":{},"sourceType":"module"}