{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tengu/dev/depudados/components/charts/VerticalBarChart.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport ReactECharts from 'echarts-for-react';\n\nvar VerticalBarChart = function VerticalBarChart(_ref) {\n  _s();\n\n  var name = _ref.name,\n      data = _ref.data,\n      textsize = _ref.textsize;\n  var xAxisData = [];\n  var yAxisData = [];\n\n  for (var sigla in data) {\n    if (Object.hasOwnProperty.call(data, sigla)) {\n      if (data[sigla].qtdDeputados !== 0) {\n        xAxisData.push(sigla);\n        yAxisData.push(Math.round(data[sigla].somaPresenca / data[sigla].qtdDeputados * 100 + Number.EPSILON));\n      }\n    }\n  }\n\n  var chart = useRef(null);\n  var option = {\n    name: 'Teste',\n    barMinWidth: 21,\n    tooltip: {\n      trigger: 'item'\n    },\n    xAxis: {\n      type: 'category',\n      data: xAxisData,\n      axisLabel: {\n        interval: 0,\n        rotate: -25,\n        width: 80,\n        overflow: 'truncate',\n        padding: [0, 40, 0, 0]\n      }\n    },\n    yAxis: {\n      type: 'value',\n      min: 92\n    },\n    series: [{\n      data: yAxisData,\n      type: 'bar'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ReactECharts, {\n    option: option,\n    notMerge: true,\n    lazyUpdate: true,\n    ref: chart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(VerticalBarChart, \"E9DVxUrMduiWe0dRI4GITQ6VxAo=\");\n\n_c = VerticalBarChart;\nexport default VerticalBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"VerticalBarChart\");","map":{"version":3,"sources":["/home/tengu/dev/depudados/components/charts/VerticalBarChart.js"],"names":["React","useEffect","useRef","ReactECharts","VerticalBarChart","name","data","textsize","xAxisData","yAxisData","sigla","Object","hasOwnProperty","call","qtdDeputados","push","Math","round","somaPresenca","Number","EPSILON","chart","option","barMinWidth","tooltip","trigger","xAxis","type","axisLabel","interval","rotate","width","overflow","padding","yAxis","min","series"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAA8B;AAAA;;AAAA,MAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAErD,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,SAAS,GAAG,EAAhB;;AAEA,OAAK,IAAMC,KAAX,IAAoBJ,IAApB,EAA0B;AACxB,QAAIK,MAAM,CAACC,cAAP,CAAsBC,IAAtB,CAA2BP,IAA3B,EAAiCI,KAAjC,CAAJ,EAA6C;AAC3C,UAAIJ,IAAI,CAACI,KAAD,CAAJ,CAAYI,YAAZ,KAA6B,CAAjC,EAAoC;AAClCN,QAAAA,SAAS,CAACO,IAAV,CAAeL,KAAf;AACAD,QAAAA,SAAS,CAACM,IAAV,CAAeC,IAAI,CAACC,KAAL,CAAWX,IAAI,CAACI,KAAD,CAAJ,CAAYQ,YAAZ,GAA2BZ,IAAI,CAACI,KAAD,CAAJ,CAAYI,YAAvC,GAAsD,GAAtD,GAA4DK,MAAM,CAACC,OAA9E,CAAf;AACD;AACF;AACF;;AAED,MAAMC,KAAK,GAAGnB,MAAM,CAAC,IAAD,CAApB;AAEA,MAAMoB,MAAM,GAAG;AACbjB,IAAAA,IAAI,EAAE,OADO;AAEbkB,IAAAA,WAAW,EAAE,EAFA;AAGbC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE;AADF,KAHI;AAMbC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,UADD;AAELrB,MAAAA,IAAI,EAAEE,SAFD;AAGLoB,MAAAA,SAAS,EAAE;AACTC,QAAAA,QAAQ,EAAE,CADD;AAETC,QAAAA,MAAM,EAAE,CAAC,EAFA;AAGTC,QAAAA,KAAK,EAAE,EAHE;AAITC,QAAAA,QAAQ,EAAC,UAJA;AAKTC,QAAAA,OAAO,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,CAAX;AALA;AAHN,KANM;AAiBbC,IAAAA,KAAK,EAAE;AACLP,MAAAA,IAAI,EAAE,OADD;AAELQ,MAAAA,GAAG,EAAE;AAFA,KAjBM;AAqBbC,IAAAA,MAAM,EAAE,CAAC;AACP9B,MAAAA,IAAI,EAAEG,SADC;AAEPkB,MAAAA,IAAI,EAAE;AAFC,KAAD;AArBK,GAAf;AA2BA,sBACE,QAAC,YAAD;AACE,IAAA,MAAM,EAAEL,MADV;AAEE,IAAA,QAAQ,EAAE,IAFZ;AAGE,IAAA,UAAU,EAAE,IAHd;AAIE,IAAA,GAAG,EAAED;AAJP;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAnDD;;GAAMjB,gB;;KAAAA,gB;AAqDN,eAAeA,gBAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport ReactECharts from 'echarts-for-react';\n\nconst VerticalBarChart = ({ name, data, textsize }) => {\n\n  var xAxisData = []\n  var yAxisData = []\n\n  for (const sigla in data) {\n    if (Object.hasOwnProperty.call(data, sigla)) {\n      if (data[sigla].qtdDeputados !== 0) {\n        xAxisData.push(sigla)\n        yAxisData.push(Math.round(data[sigla].somaPresenca / data[sigla].qtdDeputados * 100 + Number.EPSILON))\n      }\n    }\n  }\n\n  const chart = useRef(null);\n\n  const option = {\n    name: 'Teste',\n    barMinWidth: 21,\n    tooltip: {\n      trigger: 'item',\n    },\n    xAxis: {\n      type: 'category',\n      data: xAxisData,\n      axisLabel: {\n        interval: 0,\n        rotate: -25,\n        width: 80,\n        overflow:'truncate',\n        padding: [0, 40, 0, 0],\n      }\n    },\n    yAxis: {\n      type: 'value',\n      min: 92,\n    },\n    series: [{\n      data: yAxisData,\n      type: 'bar'\n    }]\n  }\n\n  return (\n    <ReactECharts\n      option={option}\n      notMerge={true}\n      lazyUpdate={true}\n      ref={chart}\n    />\n  )\n}\n\nexport default VerticalBarChart"]},"metadata":{},"sourceType":"module"}