{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tengu/dev/depudados/components/charts/PieChart.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport ReactECharts from 'echarts-for-react';\n\nvar PieChart = function PieChart(_ref) {\n  _s();\n\n  var name = _ref.name,\n      data = _ref.data;\n  var option = {\n    title: {\n      text: 'Presença média',\n      left: 'center'\n    },\n    tooltip: {\n      trigger: 'item'\n    },\n    series: [{\n      name: name,\n      type: 'pie',\n      top: '5%',\n      radius: ['50%', '80%'],\n      avoidLabelOverlap: false,\n      label: {\n        show: false,\n        position: 'center'\n      },\n      emphasis: {\n        label: {\n          show: true,\n          fontSize: '36',\n          fontWeight: 'bold',\n          formatter: '{c}%'\n        }\n      },\n      labelLine: {\n        show: false\n      },\n      data: data\n    }]\n  };\n  var echartRef, echartInstance;\n  useEffect(function () {\n    setTimeout(function () {\n      try {\n        echartInstance = echartRef.getEchartsInstance();\n        alert(echartRef);\n      } catch (e) {\n        console.log(e);\n      }\n    }, 50);\n  }, [echartRef]);\n  return /*#__PURE__*/_jsxDEV(ReactECharts, {\n    option: option,\n    notMerge: true,\n    ref: function ref(e) {\n      echartRef = e;\n    },\n    lazyUpdate: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PieChart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = PieChart;\nexport default PieChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"sources":["/home/tengu/dev/depudados/components/charts/PieChart.js"],"names":["React","useEffect","ReactECharts","PieChart","name","data","option","title","text","left","tooltip","trigger","series","type","top","radius","avoidLabelOverlap","label","show","position","emphasis","fontSize","fontWeight","formatter","labelLine","echartRef","echartInstance","setTimeout","getEchartsInstance","alert","e","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAoB;AAAA;;AAAA,MAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAEjC,MAAMC,MAAM,GAAG;AACXC,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAE,gBADH;AAEHC,MAAAA,IAAI,EAAE;AAFH,KADI;AAKXC,IAAAA,OAAO,EAAE;AACLC,MAAAA,OAAO,EAAE;AADJ,KALE;AAQXC,IAAAA,MAAM,EAAE,CACJ;AACIR,MAAAA,IAAI,EAAEA,IADV;AAEIS,MAAAA,IAAI,EAAE,KAFV;AAGIC,MAAAA,GAAG,EAAE,IAHT;AAIIC,MAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,CAJZ;AAKIC,MAAAA,iBAAiB,EAAE,KALvB;AAMIC,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE,KADH;AAEHC,QAAAA,QAAQ,EAAE;AAFP,OANX;AAUIC,MAAAA,QAAQ,EAAE;AACNH,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAE,IADH;AAEHG,UAAAA,QAAQ,EAAE,IAFP;AAGHC,UAAAA,UAAU,EAAE,MAHT;AAIHC,UAAAA,SAAS,EAAE;AAJR;AADD,OAVd;AAkBIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,IAAI,EAAE;AADC,OAlBf;AAqBIb,MAAAA,IAAI,EAAEA;AArBV,KADI;AARG,GAAf;AAmCA,MAAIoB,SAAJ,EAAeC,cAAf;AAEAzB,EAAAA,SAAS,CAAC,YAAM;AACZ0B,IAAAA,UAAU,CAAC,YAAM;AACb,UAAI;AACAD,QAAAA,cAAc,GAAGD,SAAS,CAACG,kBAAV,EAAjB;AACAC,QAAAA,KAAK,CAACJ,SAAD,CAAL;AACH,OAHD,CAGE,OAAOK,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,KAPS,EAOP,EAPO,CAAV;AAQH,GATQ,EASN,CAACL,SAAD,CATM,CAAT;AAYA,sBACI,QAAC,YAAD;AACI,IAAA,MAAM,EAAEnB,MADZ;AAEI,IAAA,QAAQ,EAAE,IAFd;AAGI,IAAA,GAAG,EAAE,aAACwB,CAAD,EAAO;AAAEL,MAAAA,SAAS,GAAGK,CAAZ;AAAe,KAHjC;AAII,IAAA,UAAU,EAAE;AAJhB;AAAA;AAAA;AAAA;AAAA,WADJ;AAQH,CA3DD;;GAAM3B,Q;;KAAAA,Q;AA6DN,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport ReactECharts from 'echarts-for-react';\n\nconst PieChart = ({ name, data }) => {\n\n    const option = {\n        title: {\n            text: 'Presença média',\n            left: 'center'\n        },\n        tooltip: {\n            trigger: 'item'\n        },\n        series: [\n            {\n                name: name,\n                type: 'pie',\n                top: '5%',\n                radius: ['50%', '80%'],\n                avoidLabelOverlap: false,\n                label: {\n                    show: false,\n                    position: 'center'\n                },\n                emphasis: {\n                    label: {\n                        show: true,\n                        fontSize: '36',\n                        fontWeight: 'bold',\n                        formatter: '{c}%'\n                    }\n                },\n                labelLine: {\n                    show: false\n                },\n                data: data\n            }\n        ]\n    }\n\n    let echartRef, echartInstance\n\n    useEffect(() => {\n        setTimeout(() => {\n            try {\n                echartInstance = echartRef.getEchartsInstance();\n                alert(echartRef)\n            } catch (e) {\n                console.log(e)\n            }\n        }, 50);\n    }, [echartRef]);\n\n\n    return (\n        <ReactECharts\n            option={option}\n            notMerge={true}\n            ref={(e) => { echartRef = e }}\n            lazyUpdate={true}\n        />\n    )\n}\n\nexport default PieChart"]},"metadata":{},"sourceType":"module"}