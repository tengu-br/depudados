{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/tengu/dev/depudados/components/charts/HorizBarChart.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport ReactECharts from 'echarts-for-react';\n\nconst HorizBarChart = ({\n  name,\n  data,\n  textsize\n}) => {\n  const chart = useRef(null);\n\n  function selectDefault() {\n    chart.current.getEchartsInstance().dispatchAction({\n      type: 'select',\n      seriesIndex: [0],\n      dataIndex: [0]\n    });\n  }\n\n  const option = {\n    xAxis: {\n      type: 'value'\n    },\n    yAxis: {\n      type: 'category',\n      data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n    },\n    series: [{\n      data: [120, 200, 150, 80, 70, 110, 130],\n      type: 'bar'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ReactECharts, {\n    option: option,\n    notMerge: true,\n    lazyUpdate: true,\n    ref: chart,\n    onEvents: {\n      click: selectDefault\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\nexport default HorizBarChart;","map":{"version":3,"sources":["/home/tengu/dev/depudados/components/charts/HorizBarChart.js"],"names":["React","useEffect","useRef","ReactECharts","HorizBarChart","name","data","textsize","chart","selectDefault","current","getEchartsInstance","dispatchAction","type","seriesIndex","dataIndex","option","xAxis","yAxis","series","click"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAD,KAA8B;AAElD,QAAMC,KAAK,GAAGN,MAAM,CAAC,IAAD,CAApB;;AAEA,WAASO,aAAT,GAAyB;AACvBD,IAAAA,KAAK,CAACE,OAAN,CAAcC,kBAAd,GAAmCC,cAAnC,CAAkD;AAChDC,MAAAA,IAAI,EAAE,QAD0C;AAEhDC,MAAAA,WAAW,EAAE,CAAC,CAAD,CAFmC;AAGhDC,MAAAA,SAAS,EAAE,CAAC,CAAD;AAHqC,KAAlD;AAKD;;AAED,QAAMC,MAAM,GAAG;AACbC,IAAAA,KAAK,EAAE;AACHJ,MAAAA,IAAI,EAAE;AADH,KADM;AAKbK,IAAAA,KAAK,EAAE;AACHL,MAAAA,IAAI,EAAE,UADH;AAEHP,MAAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C;AAFH,KALM;AASba,IAAAA,MAAM,EAAE,CAAC;AACLb,MAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,GAAxB,EAA6B,GAA7B,CADD;AAELO,MAAAA,IAAI,EAAE;AAFD,KAAD;AATK,GAAf;AAeA,sBACE,QAAC,YAAD;AACE,IAAA,MAAM,EAAEG,MADV;AAEE,IAAA,QAAQ,EAAE,IAFZ;AAGE,IAAA,UAAU,EAAE,IAHd;AAIE,IAAA,GAAG,EAAER,KAJP;AAKE,IAAA,QAAQ,EAAE;AACRY,MAAAA,KAAK,EAAEX;AADC;AALZ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAtCD;;AAwCA,eAAeL,aAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport ReactECharts from 'echarts-for-react';\n\nconst HorizBarChart = ({ name, data, textsize }) => {\n\n  const chart = useRef(null);\n\n  function selectDefault() {\n    chart.current.getEchartsInstance().dispatchAction({\n      type: 'select',\n      seriesIndex: [0],\n      dataIndex: [0]\n    });\n  }\n\n  const option = {\n    xAxis: {\n        type: 'value',\n        \n    },\n    yAxis: {\n        type: 'category',\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n    },\n    series: [{\n        data: [120, 200, 150, 80, 70, 110, 130],\n        type: 'bar'\n    }]\n}\n\n  return (\n    <ReactECharts\n      option={option}\n      notMerge={true}\n      lazyUpdate={true}\n      ref={chart}\n      onEvents={{\n        click: selectDefault\n      }}\n    />\n  )\n}\n\nexport default HorizBarChart"]},"metadata":{},"sourceType":"module"}