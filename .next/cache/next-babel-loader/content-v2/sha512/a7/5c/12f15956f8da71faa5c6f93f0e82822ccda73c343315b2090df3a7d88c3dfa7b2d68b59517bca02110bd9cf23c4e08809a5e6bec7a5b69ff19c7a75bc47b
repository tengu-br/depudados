{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tengu/dev/depudados/components/charts/HorizBarChart.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport ReactECharts from 'echarts-for-react';\n\nvar HorizBarChart = function HorizBarChart(_ref) {\n  _s();\n\n  var name = _ref.name,\n      data = _ref.data,\n      textsize = _ref.textsize;\n  var yAxisData = [];\n  data.map(function (deputado) {\n    yAxisData.push(deputado.nomeEleitoral);\n  });\n  var xAxisData = [];\n  data.map(function (deputado) {\n    xAxisData.push(Math(deputado.presencaSessoes * 100 + Number.EPSILON).round());\n  });\n  var chart = useRef(null);\n  var option = {\n    grid: {\n      left: 100\n    },\n    name: 'Teste',\n    barMinWidth: 21,\n    tooltip: {\n      trigger: 'item'\n    },\n    xAxis: {\n      type: 'value',\n      min: 50\n    },\n    yAxis: {\n      type: 'category',\n      data: yAxisData,\n      axisLabel: {\n        interval: 0,\n        rotate: 30 //If the label names are too long you can manage this by rotating the label.\n\n      }\n    },\n    series: [{\n      data: xAxisData,\n      type: 'bar'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ReactECharts, {\n    option: option,\n    notMerge: true,\n    lazyUpdate: true,\n    ref: chart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(HorizBarChart, \"E9DVxUrMduiWe0dRI4GITQ6VxAo=\");\n\n_c = HorizBarChart;\nexport default HorizBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizBarChart\");","map":{"version":3,"sources":["/home/tengu/dev/depudados/components/charts/HorizBarChart.js"],"names":["React","useEffect","useRef","ReactECharts","HorizBarChart","name","data","textsize","yAxisData","map","deputado","push","nomeEleitoral","xAxisData","Math","presencaSessoes","Number","EPSILON","round","chart","option","grid","left","barMinWidth","tooltip","trigger","xAxis","type","min","yAxis","axisLabel","interval","rotate","series"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAA8B;AAAA;;AAAA,MAA3BC,IAA2B,QAA3BA,IAA2B;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAElD,MAAIC,SAAS,GAAG,EAAhB;AACAF,EAAAA,IAAI,CAACG,GAAL,CAAS,UAACC,QAAD,EAAc;AACrBF,IAAAA,SAAS,CAACG,IAAV,CAAeD,QAAQ,CAACE,aAAxB;AACD,GAFD;AAIA,MAAIC,SAAS,GAAG,EAAhB;AACAP,EAAAA,IAAI,CAACG,GAAL,CAAS,UAACC,QAAD,EAAc;AACrBG,IAAAA,SAAS,CAACF,IAAV,CAAeG,IAAI,CAACJ,QAAQ,CAACK,eAAT,GAA2B,GAA3B,GAAiCC,MAAM,CAACC,OAAzC,CAAJ,CAAsDC,KAAtD,EAAf;AACD,GAFD;AAIA,MAAMC,KAAK,GAAGjB,MAAM,CAAC,IAAD,CAApB;AAEA,MAAMkB,MAAM,GAAG;AACbC,IAAAA,IAAI,EAAE;AACJC,MAAAA,IAAI,EAAE;AADF,KADO;AAIbjB,IAAAA,IAAI,EAAE,OAJO;AAKbkB,IAAAA,WAAW,EAAE,EALA;AAMbC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE;AADF,KANI;AASbC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,OADD;AAELC,MAAAA,GAAG,EAAE;AAFA,KATM;AAabC,IAAAA,KAAK,EAAE;AACLF,MAAAA,IAAI,EAAE,UADD;AAELrB,MAAAA,IAAI,EAAEE,SAFD;AAGLsB,MAAAA,SAAS,EAAE;AACTC,QAAAA,QAAQ,EAAE,CADD;AAETC,QAAAA,MAAM,EAAE,EAFC,CAEE;;AAFF;AAHN,KAbM;AAqBbC,IAAAA,MAAM,EAAE,CAAC;AACP3B,MAAAA,IAAI,EAAEO,SADC;AAEPc,MAAAA,IAAI,EAAE;AAFC,KAAD;AArBK,GAAf;AA2BA,sBACE,QAAC,YAAD;AACE,IAAA,MAAM,EAAEP,MADV;AAEE,IAAA,QAAQ,EAAE,IAFZ;AAGE,IAAA,UAAU,EAAE,IAHd;AAIE,IAAA,GAAG,EAAED;AAJP;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAjDD;;GAAMf,a;;KAAAA,a;AAmDN,eAAeA,aAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport ReactECharts from 'echarts-for-react';\n\nconst HorizBarChart = ({ name, data, textsize }) => {\n\n  var yAxisData = []\n  data.map((deputado) => {\n    yAxisData.push(deputado.nomeEleitoral)\n  })\n\n  var xAxisData = []\n  data.map((deputado) => {\n    xAxisData.push(Math(deputado.presencaSessoes * 100 + Number.EPSILON).round())\n  })\n\n  const chart = useRef(null);\n\n  const option = {\n    grid: {\n      left: 100,\n    },\n    name: 'Teste',\n    barMinWidth: 21,\n    tooltip: {\n      trigger: 'item',\n    },\n    xAxis: {\n      type: 'value',\n      min: 50,\n    },\n    yAxis: {\n      type: 'category',\n      data: yAxisData,\n      axisLabel: {\n        interval: 0,\n        rotate: 30 //If the label names are too long you can manage this by rotating the label.\n      }\n    },\n    series: [{\n      data: xAxisData,\n      type: 'bar'\n    }]\n  }\n\n  return (\n    <ReactECharts\n      option={option}\n      notMerge={true}\n      lazyUpdate={true}\n      ref={chart}\n    />\n  )\n}\n\nexport default HorizBarChart"]},"metadata":{},"sourceType":"module"}