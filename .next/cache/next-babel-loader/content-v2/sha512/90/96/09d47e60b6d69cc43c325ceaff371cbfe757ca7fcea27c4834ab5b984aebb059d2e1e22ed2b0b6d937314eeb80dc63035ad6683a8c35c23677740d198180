{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/tengu/dev/depudados/components/charts/PieChart.js\";\nimport React, { useEffect, useRef } from \"react\";\nimport ReactECharts from 'echarts-for-react';\n\nconst PieChart = ({\n  name,\n  data,\n  textsize\n}) => {\n  const chart = useRef(null);\n\n  function selectDefault() {\n    chart.current.getEchartsInstance().dispatchAction({\n      type: 'select',\n      seriesIndex: [0],\n      dataIndex: [0]\n    });\n  }\n\n  const option = {\n    tooltip: {\n      trigger: 'item',\n      formatter: '{c}%'\n    },\n    series: [{\n      type: 'pie',\n      radius: ['50%', '80%'],\n      avoidLabelOverlap: false,\n      selectedMode: 'single',\n      selectedOffset: 0,\n      cursor: 'default',\n      select: {\n        label: {\n          show: true\n        }\n      },\n      label: {\n        show: false,\n        position: 'center',\n        fontSize: textsize,\n        fontWeight: 'bold',\n        formatter: '{c}%'\n      },\n      emphasis: {\n        label: {\n          show: false\n        }\n      },\n      labelLine: {\n        show: false\n      },\n      data: data\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(ReactECharts, {\n    option: option,\n    notMerge: true,\n    lazyUpdate: true,\n    ref: chart,\n    onEvents: {\n      click: selectDefault\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\nexport default PieChart;","map":{"version":3,"sources":["/home/tengu/dev/depudados/components/charts/PieChart.js"],"names":["React","useEffect","useRef","ReactECharts","PieChart","name","data","textsize","chart","selectDefault","current","getEchartsInstance","dispatchAction","type","seriesIndex","dataIndex","option","tooltip","trigger","formatter","series","radius","avoidLabelOverlap","selectedMode","selectedOffset","cursor","select","label","show","position","fontSize","fontWeight","emphasis","labelLine","click"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAD,KAA8B;AAE7C,QAAMC,KAAK,GAAGN,MAAM,CAAC,IAAD,CAApB;;AAEA,WAASO,aAAT,GAAyB;AACvBD,IAAAA,KAAK,CAACE,OAAN,CAAcC,kBAAd,GAAmCC,cAAnC,CAAkD;AAChDC,MAAAA,IAAI,EAAE,QAD0C;AAEhDC,MAAAA,WAAW,EAAE,CAAC,CAAD,CAFmC;AAGhDC,MAAAA,SAAS,EAAE,CAAC,CAAD;AAHqC,KAAlD;AAKD;;AAED,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAE,MADF;AAEPC,MAAAA,SAAS,EAAE;AAFJ,KADI;AAKbC,IAAAA,MAAM,EAAE,CACN;AACEP,MAAAA,IAAI,EAAE,KADR;AAEEQ,MAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,CAFV;AAGEC,MAAAA,iBAAiB,EAAE,KAHrB;AAIEC,MAAAA,YAAY,EAAE,QAJhB;AAKEC,MAAAA,cAAc,EAAE,CALlB;AAMEC,MAAAA,MAAM,EAAE,SANV;AAOEC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE;AADD;AADD,OAPV;AAYED,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,KADD;AAELC,QAAAA,QAAQ,EAAE,QAFL;AAGLC,QAAAA,QAAQ,EAAEvB,QAHL;AAILwB,QAAAA,UAAU,EAAE,MAJP;AAKLZ,QAAAA,SAAS,EAAE;AALN,OAZT;AAmBEa,MAAAA,QAAQ,EAAE;AACRL,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE;AADD;AADC,OAnBZ;AAwBEK,MAAAA,SAAS,EAAE;AACTL,QAAAA,IAAI,EAAE;AADG,OAxBb;AA2BEtB,MAAAA,IAAI,EAAEA;AA3BR,KADM;AALK,GAAf;AAsCA,sBACE,QAAC,YAAD;AACE,IAAA,MAAM,EAAEU,MADV;AAEE,IAAA,QAAQ,EAAE,IAFZ;AAGE,IAAA,UAAU,EAAE,IAHd;AAIE,IAAA,GAAG,EAAER,KAJP;AAKE,IAAA,QAAQ,EAAE;AACR0B,MAAAA,KAAK,EAAEzB;AADC;AALZ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA7DD;;AA+DA,eAAeL,QAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport ReactECharts from 'echarts-for-react';\n\nconst PieChart = ({ name, data, textsize }) => {\n\n  const chart = useRef(null);\n\n  function selectDefault() {\n    chart.current.getEchartsInstance().dispatchAction({\n      type: 'select',\n      seriesIndex: [0],\n      dataIndex: [0]\n    });\n  }\n\n  const option = {\n    tooltip: {\n      trigger: 'item',\n      formatter: '{c}%',\n    },\n    series: [\n      {\n        type: 'pie',\n        radius: ['50%', '80%'],\n        avoidLabelOverlap: false,\n        selectedMode: 'single',\n        selectedOffset: 0,\n        cursor: 'default',\n        select: {\n          label: {\n            show: true,\n          }\n        },\n        label: {\n          show: false,\n          position: 'center',\n          fontSize: textsize,\n          fontWeight: 'bold',\n          formatter: '{c}%',\n        },\n        emphasis: {\n          label: {\n            show: false,\n          },\n        },\n        labelLine: {\n          show: false\n        },\n        data: data\n      }\n    ]\n  }\n\n  return (\n    <ReactECharts\n      option={option}\n      notMerge={true}\n      lazyUpdate={true}\n      ref={chart}\n      onEvents={{\n        click: selectDefault\n      }}\n    />\n  )\n}\n\nexport default PieChart"]},"metadata":{},"sourceType":"module"}