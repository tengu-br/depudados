{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/tengu/dev/depudados/pages/partidos.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Layout from \"../components/Layout\";\nimport ReactECharts from 'echarts-for-react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Typography } from \"@material-ui/core\";\nimport PieChart from \"../components/charts/PieChart\";\nimport PartidosList from \"../components/lists/PartidosList\"; // import testData from \"../testData/partidos.json\"\n\n/*\nGRÁFICOS:\n1 - Lista de todos os partidos\n    CARDLIST\n2 - Dados do Partido\n    SUPER CARD\n    2.1 - Nome\n    2.2 - Sigla\n    2.3 - Quantidade de Deputados em atuação\n    2.4 - Média de Gastos, proposições e presença\n*/\n\nconst Partidos = ({\n  testData\n}) => {\n  const [value, setValue] = React.useState();\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    pageTitle: \"Partidos\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      style: {\n        paddingTop: '12%',\n        paddingBottom: '5%',\n        width: '100%',\n        margin: '0px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"combo-box-demo\",\n          value: value,\n          onChange: (event, newValue) => {\n            setValue(newValue);\n          },\n          options: testData.listaPartidos // getOptionLabel={(option) => option.title}\n          ,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n            label: \"Partido\",\n            variant: \"outlined\"\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), value && /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 9,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            style: {\n              padding: '1em'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                align: \"center\",\n                style: {\n                  paddingTop: '1em'\n                },\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                align: \"center\",\n                style: {\n                  paddingTop: '1em',\n                  paddingBottom: '0.5em'\n                },\n                children: \"Quantidade de Deputados em exerc\\xEDcio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                align: \"center\",\n                children: testData.dadosPartidos[value].qtdDeputados\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                align: \"center\",\n                style: {\n                  paddingTop: '1em',\n                  paddingBottom: '1em'\n                },\n                children: \"M\\xE9dia de Gastos por deputado deste partido\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                align: \"center\",\n                children: testData.dadosPartidos[value].qtdDeputados === 0 ? 'R$ 0,00' : (Math.round(testData.dadosPartidos[value].somaGastos / testData.dadosPartidos[value].qtdDeputados * 100 + Number.EPSILON) / 100).toLocaleString('pt-BR', {\n                  minimumFractionDigits: 2,\n                  style: 'currency',\n                  currency: 'BRL'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                align: \"center\",\n                style: {\n                  paddingTop: '1em',\n                  paddingBottom: '0.5em'\n                },\n                children: \"M\\xE9dia de Proposi\\xE7\\xF5es por deputado deste partido\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                align: \"center\",\n                children: testData.dadosPartidos[value].qtdDeputados === 0 ? 'N/A' : Math.round(testData.dadosPartidos[value].somaProposicoes / testData.dadosPartidos[value].qtdDeputados + Number.EPSILON)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                align: \"center\",\n                children: \"Presen\\xE7a m\\xE9dia por deputado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this), testData.dadosPartidos[value].qtdDeputados === 0 ? /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h3\",\n                align: \"center\",\n                children: \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(PieChart, {\n                textsize: \"36\",\n                data: [{\n                  value: Math.round((testData.dadosPartidos[value].somaPresenca / testData.dadosPartidos[value].qtdDeputados + Number.EPSILON) * 10000) / 100,\n                  name: 'Presença',\n                  selected: true\n                }, {\n                  value: Math.round((100 - Math.round(testData.dadosPartidos[value].somaPresenca / testData.dadosPartidos[value].qtdDeputados * 10000 + Number.EPSILON) / 100) * 100) / 100,\n                  name: 'Falta'\n                }]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 8,\n              children: testData.dadosPartidos[value].qtdDeputados === 0 ? null : /*#__PURE__*/_jsxDEV(PartidosList, {\n                data: testData.dadosPartidos[value].deputados,\n                elevation: 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getServerSideProps() {\n  const res = await fetch(`${process.env.NEXT_PUBLIC_API_ADDR}/partidos`, {\n    method: 'POST'\n  });\n  const testData = await res.json();\n  return {\n    props: {\n      testData: testData.dados\n    }\n  };\n}\nexport default Partidos;","map":{"version":3,"sources":["/home/tengu/dev/depudados/pages/partidos.js"],"names":["React","Layout","ReactECharts","Paper","Grid","InputLabel","MenuItem","FormHelperText","FormControl","Select","TextField","Autocomplete","Typography","PieChart","PartidosList","Partidos","testData","value","setValue","useState","paddingTop","paddingBottom","width","margin","event","newValue","listaPartidos","params","padding","dadosPartidos","qtdDeputados","Math","round","somaGastos","Number","EPSILON","toLocaleString","minimumFractionDigits","style","currency","somaProposicoes","somaPresenca","name","selected","deputados","getServerSideProps","res","fetch","process","env","NEXT_PUBLIC_API_ADDR","method","json","props","dados"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport ReactECharts from 'echarts-for-react';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { Typography } from \"@material-ui/core\";\nimport PieChart from \"../components/charts/PieChart\";\nimport PartidosList from \"../components/lists/PartidosList\";\n// import testData from \"../testData/partidos.json\"\n\n/*\nGRÁFICOS:\n1 - Lista de todos os partidos\n    CARDLIST\n2 - Dados do Partido\n    SUPER CARD\n    2.1 - Nome\n    2.2 - Sigla\n    2.3 - Quantidade de Deputados em atuação\n    2.4 - Média de Gastos, proposições e presença\n*/\n\nconst Partidos = ({ testData }) => {\n\n  const [value, setValue] = React.useState();\n\n  return (\n    <Layout pageTitle=\"Partidos\">\n      <Grid container spacing={3} style={{ paddingTop: '12%', paddingBottom: '5%', width: '100%', margin: '0px' }}>\n        <Grid item xs={12} md={3}>\n          <Autocomplete\n            id=\"combo-box-demo\"\n            value={value}\n            onChange={(event, newValue) => {\n              setValue(newValue);\n            }}\n            options={testData.listaPartidos}\n            // getOptionLabel={(option) => option.title}\n            renderInput={(params) => <TextField {...params} label=\"Partido\" variant=\"outlined\" />}\n          />\n        </Grid>\n        {\n          value &&\n          <Grid item xs={12} md={9}>\n            <Paper elevation={3}>\n              <Grid container spacing={3} style={{ padding: '1em' }}>\n                <Grid item xs={12}>\n                  <Typography variant='h6' align='center' style={{ paddingTop: '1em' }}>\n                    {value}\n                  </Typography>\n                </Grid>\n                <Grid item xs={4}>\n                  <Typography variant='body1' align='center' style={{ paddingTop: '1em', paddingBottom: '0.5em' }}>\n                    Quantidade de Deputados em exercício\n                </Typography>\n                  <Typography variant='h3' align='center' >\n                    {testData.dadosPartidos[value].qtdDeputados}\n                  </Typography>\n                </Grid>\n                <Grid item xs={4}>\n                  <Typography variant='body1' align='center' style={{ paddingTop: '1em', paddingBottom: '1em' }}>\n                    Média de Gastos por deputado deste partido\n                </Typography>\n                  <Typography variant='h5' align='center' >\n                    {\n                      testData.dadosPartidos[value].qtdDeputados === 0 ?\n                        ('R$ 0,00')\n                        :\n                        (Math.round(testData.dadosPartidos[value].somaGastos / testData.dadosPartidos[value].qtdDeputados * 100 + Number.EPSILON) / 100).toLocaleString('pt-BR', { minimumFractionDigits: 2, style: 'currency', currency: 'BRL' })\n                    }\n                  </Typography>\n                </Grid>\n                <Grid item xs={4}>\n                  <Typography variant='body1' align='center' style={{ paddingTop: '1em', paddingBottom: '0.5em' }}>\n                    Média de Proposições por deputado deste partido\n                </Typography>\n                  <Typography variant='h3' align='center' >\n                    {\n                      testData.dadosPartidos[value].qtdDeputados === 0 ?\n                        ('N/A')\n                        :\n                        Math.round(testData.dadosPartidos[value].somaProposicoes / testData.dadosPartidos[value].qtdDeputados + Number.EPSILON)\n                    }\n                  </Typography>\n                </Grid>\n                <Grid item xs={4}>\n                  <Typography variant='body1' align='center'>\n                    Presença média por deputado\n                  </Typography>\n                  {\n                    testData.dadosPartidos[value].qtdDeputados === 0 ?\n                      <Typography variant='h3' align='center' >\n                        N/A\n                      </Typography>\n                      :\n                      (\n                        <PieChart\n                          textsize='36'\n                          data={[\n                            { value: (Math.round((testData.dadosPartidos[value].somaPresenca / testData.dadosPartidos[value].qtdDeputados + Number.EPSILON) * 10000) / 100), name: 'Presença', selected: true },\n                            { value: Math.round((100 - (Math.round(testData.dadosPartidos[value].somaPresenca / testData.dadosPartidos[value].qtdDeputados * 10000 + Number.EPSILON) / 100)) * 100) / 100, name: 'Falta' },\n                          ]} />\n                      )\n                  }\n                </Grid>\n                <Grid item xs={8}>\n                  {\n                    testData.dadosPartidos[value].qtdDeputados === 0 ?\n                      (null)\n                      :\n                      (\n                        <PartidosList data={testData.dadosPartidos[value].deputados} elevation={0} />\n                      )\n                  }\n                </Grid>\n              </Grid>\n            </Paper>\n          </Grid>\n        }\n\n      </Grid>\n    </Layout>\n  );\n};\n\nexport async function getServerSideProps() {\n\n  const res = await fetch(`${process.env.NEXT_PUBLIC_API_ADDR}/partidos`, { method: 'POST' })\n  const testData = await res.json()\n\n  return { props: { testData: testData.dados } }\n}\n\nexport default Partidos;\n"]},"metadata":{},"sourceType":"module"}