{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/tengu/dev/depudados/components/charts/PieChart.js\";\nimport React, { useRef } from \"react\";\nimport ReactECharts from 'echarts-for-react';\n\nconst PieChart = ({\n  name,\n  data\n}) => {\n  const option = {\n    title: {\n      text: 'Presença média',\n      left: 'center'\n    },\n    tooltip: {\n      trigger: 'item'\n    },\n    series: [{\n      name: name,\n      type: 'pie',\n      top: '5%',\n      radius: ['50%', '80%'],\n      avoidLabelOverlap: false,\n      label: {\n        show: false,\n        position: 'center'\n      },\n      emphasis: {\n        label: {\n          show: true,\n          fontSize: '36',\n          fontWeight: 'bold',\n          formatter: '{c}%'\n        }\n      },\n      labelLine: {\n        show: false\n      },\n      data: data\n    }]\n  };\n  const containerRef = useRef(null);\n  const instance = containerRef.getEchartsInstance();\n\n  if (instance) {\n    instance.dispatchAction({\n      type: 'highlight',\n      seriesIndex: [0],\n      dataIndex: [0]\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(ReactECharts, {\n    option: option,\n    notMerge: true,\n    ref: containerRef,\n    lazyUpdate: true,\n    theme: \"theme_name\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\nexport default PieChart;","map":{"version":3,"sources":["/home/tengu/dev/depudados/components/charts/PieChart.js"],"names":["React","useRef","ReactECharts","PieChart","name","data","option","title","text","left","tooltip","trigger","series","type","top","radius","avoidLabelOverlap","label","show","position","emphasis","fontSize","fontWeight","formatter","labelLine","containerRef","instance","getEchartsInstance","dispatchAction","seriesIndex","dataIndex"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAoB;AAEjC,QAAMC,MAAM,GAAG;AACXC,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAE,gBADH;AAEHC,MAAAA,IAAI,EAAE;AAFH,KADI;AAKXC,IAAAA,OAAO,EAAE;AACLC,MAAAA,OAAO,EAAE;AADJ,KALE;AAQXC,IAAAA,MAAM,EAAE,CACJ;AACIR,MAAAA,IAAI,EAAEA,IADV;AAEIS,MAAAA,IAAI,EAAE,KAFV;AAGIC,MAAAA,GAAG,EAAE,IAHT;AAIIC,MAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,CAJZ;AAKIC,MAAAA,iBAAiB,EAAE,KALvB;AAMIC,MAAAA,KAAK,EAAE;AACHC,QAAAA,IAAI,EAAE,KADH;AAEHC,QAAAA,QAAQ,EAAE;AAFP,OANX;AAUIC,MAAAA,QAAQ,EAAE;AACNH,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAE,IADH;AAEHG,UAAAA,QAAQ,EAAE,IAFP;AAGHC,UAAAA,UAAU,EAAE,MAHT;AAIHC,UAAAA,SAAS,EAAE;AAJR;AADD,OAVd;AAkBIC,MAAAA,SAAS,EAAE;AACPN,QAAAA,IAAI,EAAE;AADC,OAlBf;AAqBIb,MAAAA,IAAI,EAAEA;AArBV,KADI;AARG,GAAf;AAmCA,QAAMoB,YAAY,GAAGxB,MAAM,CAAC,IAAD,CAA3B;AACA,QAAMyB,QAAQ,GAAID,YAAY,CAACE,kBAAb,EAAlB;;AACA,MAAID,QAAJ,EAAc;AACVA,IAAAA,QAAQ,CAACE,cAAT,CAAwB;AACpBf,MAAAA,IAAI,EAAE,WADc;AAEpBgB,MAAAA,WAAW,EAAE,CAAC,CAAD,CAFO;AAGpBC,MAAAA,SAAS,EAAE,CAAC,CAAD;AAHS,KAAxB;AAKH;;AAED,sBACI,QAAC,YAAD;AACI,IAAA,MAAM,EAAExB,MADZ;AAEI,IAAA,QAAQ,EAAE,IAFd;AAGI,IAAA,GAAG,EAAEmB,YAHT;AAII,IAAA,UAAU,EAAE,IAJhB;AAKI,IAAA,KAAK,EAAE;AALX;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAxDD;;AA0DA,eAAetB,QAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport ReactECharts from 'echarts-for-react';\n\nconst PieChart = ({ name, data }) => {\n\n    const option = {\n        title: {\n            text: 'Presença média',\n            left: 'center'\n        },\n        tooltip: {\n            trigger: 'item'\n        },\n        series: [\n            {\n                name: name,\n                type: 'pie',\n                top: '5%',\n                radius: ['50%', '80%'],\n                avoidLabelOverlap: false,\n                label: {\n                    show: false,\n                    position: 'center'\n                },\n                emphasis: {\n                    label: {\n                        show: true,\n                        fontSize: '36',\n                        fontWeight: 'bold',\n                        formatter: '{c}%'\n                    }\n                },\n                labelLine: {\n                    show: false\n                },\n                data: data\n            }\n        ]\n    }\n\n    const containerRef = useRef(null);\n    const instance  = containerRef.getEchartsInstance();\n    if (instance) {\n        instance.dispatchAction({\n            type: 'highlight',\n            seriesIndex: [0],\n            dataIndex: [0]\n        });\n    }\n\n    return (\n        <ReactECharts\n            option={option}\n            notMerge={true}\n            ref={containerRef}\n            lazyUpdate={true}\n            theme={\"theme_name\"}\n        />\n    )\n}\n\nexport default PieChart"]},"metadata":{},"sourceType":"module"}